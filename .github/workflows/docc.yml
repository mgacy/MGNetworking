name: Generate DocC
on:
  push:
    branches: [ main ]

jobs:
  Build-Github-Actions:
    runs-on: macos-latest
    steps:
    - name: Git Checkout
      uses: actions/checkout@v3

    # - name: Git Checkout Docs
    #   uses: actions/checkout@v3
    #   with:
    #     ref: docs
    #     path: docs

    - name: Debug
      run: |
        pwd
        echo ${HOME}
        echo ${GITHUB_WORKSPACE}

    - name: Build Doc Bundle
      run: |
          echo "Building Documentation..."
          xcodebuild docbuild -scheme MGNetworking -derivedDataPath ./docbuild -destination 'platform=macOS'

          # Doc is built, but it's inside docbuild, let's find it
          DOCC_DIR=`find ./docbuild -type d -iname "MGNetworking.doccarchive"`
          echo "$DOCC_DIR"

          # Get the last commit message and add current date
          DOC_COMMIT_MESSAGE=`git log -1  --pretty='%s'`" - "`date +%Y/%m/%d`
          echo "$echo "$DOC_COMMIT_MESSAGE"

          # Pretty print DocC JSON output so that it can be consistently diffed between commits
          # TODO: does this work?
          export DOCC_JSON_PRETTYPRINT=YES

          # Export docs
          $(xcrun --find docc) process-archive \
          transform-for-static-hosting "$DOCC_DIR" \
          --output-path ./docs/docs \
          --hosting-base-path MGNetworking

          # Save the current commit we've just built documentation from in a variable
          CURRENT_COMMIT_HASH=`git rev-parse --short HEAD`
          echo "$CURRENT_COMMIT_HASH"

          # Commit and push our changes to the gh-pages branch
          cd docs
          git add docs

          if [ -n "$(git status --porcelain)" ]; then
              echo "Documentation changes found. Commiting the changes to the 'docs' branch and pushing to origin."
              # git commit -m "Update GitHub Pages documentation site to '$CURRENT_COMMIT_HASH'."
              # git push origin HEAD:docs
          else
            # No changes found, nothing to commit.
            echo "No documentation changes found."
          fi

